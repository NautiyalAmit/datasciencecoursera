1: Basic Building Blocks

A small collection of numbers called a vector. Any object that contains data is called a data structure and numeric vectors
are the simplest type of data structure in R. In fact, even a single number is considered a vector of length one.The easiest way to create a vector is with the c() function, which stands for 'concatenate' or 'combine'. 
To create a vector containing the numbers 1.1, 9, and 3.14, type c(1.1, 9, 3.14). 

Anytime you have questions about a particular function, you can accessR's built-in help files via the `?` command. For example, if you want more information on the c() function, type ?c without the parentheses that normally follow a function name.

You can combine vectors to make a new vector. Create a new vector that contains z, 555, then z again in that order.
z
[1] 1.10 9.00 3.14
So,c(z,555,z)
so,[1]   1.10   9.00   3.14 555.00   1.10   9.00   3.14

Numeric vectors can be used in arithmetic expressions. Type the following to see what happens: z * 2 + 100.

> z*2+100
[1] 102.20 118.00 106.28

First, R multiplied each of the three elements in z by 2. Then it added 100 to each element to get the result you see above.

Take the square root of z - 1 and assign it to a new variable called
| my_sqrt.

> my_sqrt <-sqrt(z-1)

Print the contents of my_sqrt.

> my_sqrt
[1] 0.3162278 2.8284271 1.4628739

R first subtracted 1 from each element of z, then took the square root of each element. This leaves you with a vector of the same length as the original vector z.


When given two vectors of the same length, R simply performs thespecified arithmetic operation (`+`, `-`, `*`, etc.) element-by-element.If the vectors are of different lengths, R 'recycles' the shorter vector until it is the same length as the longer vector.

Behind the scenes, R is 'recycling' the 2 to make a vector of 2s and the 100 to make a vector of 100s. In other words, when you ask R to compute z* 2 + 100, what it really computes is this: z * c(2, 2, 2) + c(100, 100,100).

To see another example of how this vector 'recycling' works, try adding c(1, 2, 3, 4) and c(0, 10). Don't worry about saving the result in a new variable.

> c(1,2,3,4)+c(0,10)
[1]  1 12  3 14

If the length of the shorter vector does not divide evenly into the length of the longer vector, R will still apply the 'recycling' method, but will throw a warning to let you know something fishy might be going on.

Try c(1, 2, 3, 4) + c(0, 10, 100) for an example.

> c(1, 2, 3, 4) + c(0, 10, 100)
[1]   1  12 103   4
Warning message:
In c(1, 2, 3, 4) + c(0, 10, 100) :
  longer object length is not a multiple of shorter object length
